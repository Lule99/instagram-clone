package rules;

dialect "mvel"

import com.instaclone.instaclone.model.facts.FinalCategorization
import com.instaclone.instaclone.model.facts.ProfileInFocus
import com.instaclone.instaclone.model.facts.ProfileOfInterest
import com.instaclone.instaclone.model.facts.TopCategories
import com.instaclone.instaclone.model.Profile
import com.instaclone.instaclone.model.BaseEntity
import java.time.LocalDateTime;
import com.instaclone.instaclone.model.facts.TimeDifferenceConstantCalculation
import java.util.List;
import java.lang.Double
import java.lang.Integer
import static java.lang.Math.abs;


rule "boost profiles that are not followed"
    agenda-group "profilesOfInterest"
    salience 100
    no-loop
    lock-on-active
    when
    $focus: ProfileInFocus($main:profile) and
    $poi: ProfileOfInterest(
            $profile:profile,
            $profile.id != $main.id,
            ofInterest==false,
            $profile.getFollowers() not contains $main)       //svi koji me ne prate dobijaju bonus
    then
    $poi.setSimilarity($poi.getSimilarity() + 0.2);

end

rule "boost profiles that are new"
    agenda-group "profilesOfInterest"
    salience 90
    no-loop
    lock-on-active
    when
    $focus: ProfileInFocus($main:profile) and                   //svi novi dobijaju bonus
    $p: ProfileOfInterest(
            $profile: profile,
            $profile.id != $main.id,
            ofInterest==false)
    then
        LocalDateTime timeCreated =((BaseEntity)$profile).getTimeCreated();
        TimeDifferenceConstantCalculation tdc = new TimeDifferenceConstantCalculation(timeCreated, LocalDateTime.now());
        $p.setSimilarity($p.getSimilarity() + 0.3/(tdc.getDayDifference()+1));       //trenutni max je 0.3

end

rule "boost profiles that are strongly simmilar to my interest"
    agenda-group "profilesOfInterest"
    salience 80
    no-loop
    lock-on-active
    when
    $fc : FinalCategorization() and
    $focus: ProfileInFocus($main:profile) and
    $p: ProfileOfInterest(
            $profile: profile,
            $profile.id != $main.id,
            ofInterest==false,
            totalDiff < 5)
    then
    $p.setSimilarity($p.getSimilarity() + 0.5);

end

rule "boost profiles that are somewhat simmilar to my interest"
    agenda-group "profilesOfInterest"
    salience 80
    no-loop
    lock-on-active
    when
    $fc : FinalCategorization() and
    $focus: ProfileInFocus($main:profile) and
    $p: ProfileOfInterest(
            $profile: profile,
            $profile.id != $main.id,
            ofInterest==false,
            totalDiff > 5,
            totalDiff < 10)
    then
        $p.setSimilarity($p.getSimilarity() + 0.3);
end

rule "boost profiles that are weakly simmilar to my interest"
    agenda-group "profilesOfInterest"
    salience 80
    no-loop
    lock-on-active
    when
    $fc : FinalCategorization() and
    $focus: ProfileInFocus($main:profile) and
    $p: ProfileOfInterest(
        $profile: profile,
        $profile.id != $main.id,
        ofInterest==false,
        totalDiff > 10,
        totalDiff < 15)
    then
        $p.setSimilarity($p.getSimilarity() + 0.1);

end

rule "add similarity"
agenda-group "profilesOfInterest"
    salience 70
    no-loop
    lock-on-active
    when
    $fc : FinalCategorization() and
    $focus: ProfileInFocus($main:profile) and
    $p: ProfileOfInterest(
        $profile: profile,
        $profile.id != $main.id,
        ofInterest==false)
    $difference: Double() from accumulate(
     Double($catFC: this) from $fc.getCategorization(),
     init(Integer i = 0; Integer count = 0;),
     action(
        count += Math.abs($catFC-$p.getProfile().getFollowCategorization().getCategories().get(i));
        i++;
     ),
     result(count)
    )
    then
    $p.setSimilarity($p.getSimilarity() + 1 - $difference/(16*16));
    System.out.println("similarityDiff:");
    System.out.println($difference);
end

rule "boost top categories similarity"
 salience 60
    no-loop
    lock-on-active
    when
    $fc : FinalCategorization() and
    $focus: ProfileInFocus($main:profile) and
    $p:ProfileOfInterest(
             $profile:profile,
             $profile.id != $main.id,
             ofInterest==false) and
    $top: TopCategories($topC:topCategories, $noc:numOfCats) and
    $difference: Double() from accumulate(
     Integer($i:this) from $topC,
     init(Integer count = 0;),
     action(
        count += Math.abs($fc.getCategorization().get($i)-$p.getProfile().getFollowCategorization().getCategories().get($i));
     ),
     result(count)
    )
    then
    $p.setSimilarity($p.getSimilarity() + 1 - $difference/($noc*16));
    System.out.println("top categories similarity:");
    System.out.println($difference);
end;

rule "filter ofInterest"
    agenda-group "profilesOfInterest"
    salience 50
    no-loop
    lock-on-active
    when
      $p: ProfileOfInterest(
        ofInterest==false,
        similarity>0.45
        )
    then
        $p.setOfInterest(true);
end


