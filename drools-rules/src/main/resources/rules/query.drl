package rules;
dialect  "mvel"

import com.instaclone.instaclone.model.facts.PostFact
import com.instaclone.instaclone.model.facts.ProfileFact
import com.instaclone.instaclone.model.facts.MyLocation
import java.util.List
import java.util.Set
import java.time.LocalDateTime
import java.lang.Double


query lastNDaysMoreThanKReactions(LocalDateTime thresholdTime,
                                  Integer thresholdShares,
                                  Integer thresholdReactions)
    $res: List() from collect(
        PostFact(timeCreated.isAfter(thresholdTime),
         numOfShares > thresholdShares
          || reactionsIds.size() > thresholdReactions)
    )
end;


query viralByAvgFollowInteractionsRelation(LocalDateTime thresholdTime, Double avgFollowers)
    $res: List() from collect(
        PostFact($viral:this,
         timeCreated>thresholdTime,
          numOfShares > 5 * avgFollowers ||
          reactionsIds.size() > 10 * avgFollowers)
    )
end;

query viralByFollowNumOfInteractionsRelation(LocalDateTime thresholdTime)
    $res: List() from collect(
        PostFact($viral:this,
         timeCreated>thresholdTime,
          numOfShares > 1.5 * publisher.followingIds.size() ||
          reactionsIds.size() > 3 * publisher.followingIds.size())
    )
end;


// da li se x prati y preko nekoga...
//query areConnected(Profile x, Profile y)
//    Profile(x, following contains y;)
//    or
//    (Profile(z, following contains y;) and areConnected(x, z;))
//end;

query getAverageFollowers()

    $avg: Number() from accumulate(
        PostFact($folls:publisher.followersIds),
        init(int i = 1; int count = 0;),
        action(
            count += $folls.size();
            i++;
        ),
        result(count/i)
    )

end;

query backward( String x, String y )
  MyLocation( x, y; )
  or
  ( MyLocation( z, y; ) and backward( x, z; ) )
end

rule "go1"
when
    String( this == "go1" )
    backward("subotica", "srbija"; )
then
    System.out.println( "subotica je u srbiji" );
end





